#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.34209
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;


using System.IO;
using System.IO.IsolatedStorage;
using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;


public class DebugWriter : TextWriter
{
    private const int DefaultBufferSize = 256;
    private System.Text.StringBuilder _buffer;

    public DebugWriter()
    {
        BufferSize = 256;
        _buffer = new System.Text.StringBuilder(BufferSize);
    }

    public int BufferSize
    {
        get;
        private set;
    }

    public override System.Text.Encoding Encoding
    {
        get { return System.Text.Encoding.UTF8; }
    }

    #region StreamWriter Overrides
    public override void Write(char value)
    {
        _buffer.Append(value);
        if (_buffer.Length >= BufferSize)
            Flush();
    }

    public override void WriteLine(string value)
    {
        Flush();

        using(var reader = new StringReader(value))
        {
            string line; 
            while( null != (line = reader.ReadLine()))
                System.Diagnostics.Debug.WriteLine(line);
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
            Flush();
    }

    public override void Flush()
    {
        if (_buffer.Length > 0)
        {
            System.Diagnostics.Debug.WriteLine(_buffer);
            _buffer.Clear();
        }
    }
    #endregion
}


public partial class atletismoContext : System.Data.Linq.DataContext
{
	
	public bool CreateIfNotExists()
	{
		bool created = false;
		if (!this.DatabaseExists())
		{
			string[] names = this.GetType().Assembly.GetManifestResourceNames();
			string name = names.Where(n => n.EndsWith(FileName)).FirstOrDefault();
			if (name != null)
			{
				using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name))
				{
					if (resourceStream != null)
					{
						using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())
						{
							using (IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream(FileName, FileMode.Create, myIsolatedStorage))
							{
								using (BinaryWriter writer = new BinaryWriter(fileStream))
								{
									long length = resourceStream.Length;
									byte[] buffer = new byte[32];
									int readCount = 0;
									using (BinaryReader reader = new BinaryReader(resourceStream))
									{
										// read file in chunks in order to reduce memory consumption and increase performance
										while (readCount < length)
										{
											int actual = reader.Read(buffer, 0, buffer.Length);
											readCount += actual;
											writer.Write(buffer, 0, actual);
										}
									}
								}
							}
						}
						created = true;
					}
					else
					{
						this.CreateDatabase();
						created = true;
					}
				}
			}
			else
			{
				this.CreateDatabase();
				created = true;
			}
		}
		return created;
	}
	
	public bool LogDebug
	{
		set
		{
			if (value)
			{
				this.Log = new DebugWriter();
			}
		}
	}
	
	public static string ConnectionString = "Data Source=isostore:/atletismo.sdf";

	public static string ConnectionStringReadOnly = "Data Source=appdata:/atletismo.sdf;File Mode=Read Only;";

	public static string FileName = "atletismo.sdf";

	public atletismoContext(string connectionString) : base(connectionString)
	{
		OnCreated();
	}
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAtletas(Atletas instance);
  partial void UpdateAtletas(Atletas instance);
  partial void DeleteAtletas(Atletas instance);
  #endregion
	
	public System.Data.Linq.Table<Atletas> Atletas
	{
		get
		{
			return this.GetTable<Atletas>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="atletas")]
public partial class Atletas : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Idatleta;
	
	private string _Nomeatleta;
	
	private string _Pais;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdatletaChanging(int value);
    partial void OnIdatletaChanged();
    partial void OnNomeatletaChanging(string value);
    partial void OnNomeatletaChanged();
    partial void OnPaisChanging(string value);
    partial void OnPaisChanged();
    #endregion
	
	public Atletas()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="idatleta", Storage="_Idatleta", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Idatleta
	{
		get
		{
			return this._Idatleta;
		}
		set
		{
			if ((this._Idatleta != value))
			{
				this.OnIdatletaChanging(value);
				this.SendPropertyChanging();
				this._Idatleta = value;
				this.SendPropertyChanged("Idatleta");
				this.OnIdatletaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nomeatleta", Storage="_Nomeatleta", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Nomeatleta
	{
		get
		{
			return this._Nomeatleta;
		}
		set
		{
			if ((this._Nomeatleta != value))
			{
				this.OnNomeatletaChanging(value);
				this.SendPropertyChanging();
				this._Nomeatleta = value;
				this.SendPropertyChanged("Nomeatleta");
				this.OnNomeatletaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pais", Storage="_Pais", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Pais
	{
		get
		{
			return this._Pais;
		}
		set
		{
			if ((this._Pais != value))
			{
				this.OnPaisChanging(value);
				this.SendPropertyChanging();
				this._Pais = value;
				this.SendPropertyChanged("Pais");
				this.OnPaisChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
